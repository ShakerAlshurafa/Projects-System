@using SPCS.ViewModel
@model List<ApplicationUserVM>
@section Title {
Users
}
@section Buttons {
    <a asp-controller="Users" asp-action="Create" class="text-white text-decoration-none btn btn-primary w-25 ms-auto">Create</a>
}

<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">User Name</th>
            <th scope="col">Email</th>
            <th scope="col">Address</th>
            <th scope="col">Phone Number</th>
            <th scope="col">Roles</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="2">
                    <div class="alert alert-warning alert-dismissible">
                        <h5><i class="carousel-control-next-icon fas fa-exclamation-triangle"></i>Alert!</h5>
                        no data found
                    </div>
                </td>
            </tr>
        }
        @foreach (var item in @Model)
        {
            <tr>
                <td>@item.UserName</td>
                <td>@item.Email</td>
                <td>@item.Address</td>
                <td>@item.PhoneNumber</td>
                @if(item?.Roles != null)
                {
                    <td>@string.Join(", ", item.Roles)</td>
                }
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        <a class="btn btn-sm btn-info" asp-controller="Users" asp-action="Update" asp-route-id="@item?.Id">
                            <i class="fas fa-info-circle">Update</i>
                        </a>
                        <a class="btn btn-sm btn-danger js-delete" data-id="@item?.Id" href="#">
                            <i class="fas fa-trash"> Delete</i>
                        </a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>




@section Scripts {
    <script>
        document.querySelectorAll(".js-delete").forEach((element) => {
            element.addEventListener("click", async () => {
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        const id = element.dataset.id;
                        const response = await fetch(`/Users/Delete/${id}`, {
                            method: 'DELETE'
                        });
                        if (response.ok) {
                            element.closest("tr").remove();
                            Swal.fire({
                                title: "Deleted!",
                                text: "Account has been deleted.",
                                icon: "success"
                            });
                        }
                    }
                });
            })
        })
    </script>
}